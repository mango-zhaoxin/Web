function createPlayer(color) {
  const Player = new Object();
  Player.color = color;
  Player.start = function () {
    console.log('下棋');
  }
}

const red = createPlayer('red');

console.log(red);
// console.log(red.constructor);


// ChatGPT

// 工厂模式是一种创建对象的设计模式，它提供了一种创建对象的方法，而不必暴露对象的创建逻辑。它将对象的创建委托给一个工厂类，该类根据给定的参数决定创建哪种类型的对象。工厂模式主要有三种实现方式：简单工厂模式、工厂方法模式和抽象工厂模式。

// 简单工厂模式又称为静态工厂方法模式，它通过一个静态方法来创建对象，客户端只需要知道传入的参数即可获得所需的对象，不需要了解具体的创建过程。这种模式比较简单，但是扩展性不够好。

// 工厂方法模式通过定义一个工厂方法来创建对象，每个具体的工厂类负责创建一种类型的对象。这种模式可以支持新增产品的扩展，但是需要创建很多的具体工厂类。

// 抽象工厂模式是在工厂方法模式基础上的扩展，它提供了一种创建一组相关或相互依赖对象的接口，而无需指定它们的具体类。每个具体的工厂类可以创建一组特定的产品，这些产品之间有着一定的关联性。这种模式可以支持新增产品族的扩展。